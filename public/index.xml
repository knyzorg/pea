<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Program Exit Assessment</title>
    <link>/</link>
    <description>Recent content on Program Exit Assessment</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Analysis</title>
      <link>/analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/analysis/</guid>
      <description>Technical Assessment The decision behind selecting our chosen architecture of ASP.NET MVC with Entity Framework Code-First on .NET Core, was based on the fact the Microsoft has effectively deprecated .NET Framework by encouraging developers to choose .NET Core whenever possible. Following this, Web Forms is unsupported by ASP.NET Core, forcing us to go with MVC. While this decision limited the libraries we could use due to them lacking .</description>
    </item>
    
    <item>
      <title>Communications</title>
      <link>/communications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/communications/</guid>
      <description>Research Project The systems class featured a research portion which was completed gradually throughout the milestones set by the course. In this research project we were to present new subjects which could be incorporated into the Heritage program. I presented the Rust programming language and have found that it would be beneficial to include it in the curiculuum within the second year programming courses as it a powerful tool for teaching memory constructs.</description>
    </item>
    
    <item>
      <title>Deployment</title>
      <link>/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/deployment/</guid>
      <description>The procedure to deploy the TLC system is straight-forward and standard. It includes installing dependencies, setting up a database and publishing to IIS.
Dependencies In order to be able to publish the system, the publishing system needs to have two dependencies installed: .NET Core SDK and NodeJS. The former is necessary to compile the application, while the latter is required to compile the JavaScript assets as part of the build process.</description>
    </item>
    
    <item>
      <title>Design</title>
      <link>/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/design/</guid>
      <description>Database (Deliverable 7) The TLC system featured the use of two databases, the system’s own database and the Clara database. The system database was responsible for tracking all the moving parts of the system while the purpose of Clara was for retrieving student, teacher and course information such as their names.
The Physical Data Model A physical data model represents the physical SQL tables which store the data. They are represented in the picture below.</description>
    </item>
    
    <item>
      <title>Implementation</title>
      <link>/implementation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/implementation/</guid>
      <description>One of the workflows I worked on in the TLC system were the queue management operations. This workflow entails a teacher logging in, adding students to the queue, re-ordering them, activating them and removing them.
This workflow is demonstrated in the video below.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/introduction/</guid>
      <description>My name is Viacheslav Knyazev, and this website is my Program Exit Assessment (PEA) digital portfolio. The purpose of the PEA is to demonstrate the achievement of the objectives and standards set by the Computer Science Program Faculty at Heritage College as well as the integration of all learning within the program. Additionally, it may be used to complement my resume. The website describes the development of my PEA project and is divided into sections covering initiation, construction, maintenance, communications and release.</description>
    </item>
    
    <item>
      <title>Maintenance</title>
      <link>/maintenance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/maintenance/</guid>
      <description>Types of Maintenance Projects The maintenance course covered the different types of maintenance (Corrective, Adaptive, Perfective, Preventitive) and their respective purposes.
Corrective Maintenance Corrective maintenance is for fixing issues which were not addressed during the development phase of the project such as bugs.
Adaptive Maintenance Adaptive maintenance is for adapting the system&amp;rsquo;s internals in order to allow to it to run in a different environment such as a different OS or different database.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/process/</guid>
      <description>Agile is a software development methodology which values individuals over processes, working software over documentation, customer collaboration over negotiations and, responding to change over following a plan. These are manifested through the processes which Agile promotes, namely Sprint and Scrum.
User Stories &amp;amp; Acceptance Criteria At its foundation, Agile approaches the software development process as the gradual completion of user stories. A user story is a short, simple description of a feature told from the perspective of someone using the system, stated in the form of &amp;ldquo;As a type of user, I want to some action so that some reason.</description>
    </item>
    
    <item>
      <title>Project Management</title>
      <link>/project-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project-management/</guid>
      <description>The project management aspect of the project started as early as the introductions to the projects were made. As a team, we made high-level estimates of the projects using the table-top method, where we placed the different projects’ complexity relative to one-another. This gave us the list of projects, ordered by size.
Product &amp;amp; Sprint Backlogs The work items to be completed for a project are kept in the product backlog in order to track and organize user stories.</description>
    </item>
    
    <item>
      <title>Requirements</title>
      <link>/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/requirements/</guid>
      <description>Academic Services are always seeking to optimize allocation of its resources. In so far as the TLC is concerned, they are interesting in measuring, among other things, demand for help. Up until now, Academic Services have been working with non-machine readable, and inaccurate data coming from the TLC. This data was produced by students checking into the TLC by writing down their student number and topic in a notebook. While the lack of machine-readability is clear, the inaccuracy was in large part due to students forgetting to use the notebook or not being aware of it altogether.</description>
    </item>
    
    <item>
      <title>Team Environment</title>
      <link>/team-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/team-environment/</guid>
      <description>During the course of Development Project I and II, the teams for each project were staffed according to complexity with team sizes ranging from 4 to 6 people. My team was composed of four members: Cody Douris-Peeke, Patrick Mirowski, Thomas Palaisy and myself. We worked efficiently in a conflict-free manner while trying to be as helpful as possible to one another. Each of us naturally drifted into a preferred aspect of the project, and always knew what needed to be done, coordinated by our assisant project manager (APM).</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/test/</guid>
      <description>Unit Testing Our team developed unit tests with XUnit as developement went on, which we ran when making making changes in order both test the new code and detect regressions. The purpose of unit tests is to perform tests on individual functions in isolation from the rest of the system. Below is an example of the structure of a unit test.
Test Categories We tested the system for functionality such that the features users expected was were working, for usability such that it was easy to navigate, for compatibility by testing in different browsers, for security by testing for common vulnerabilities and for business cycles we chcked that the individual user flows were functional.</description>
    </item>
    
    <item>
      <title>Training</title>
      <link>/training/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/training/</guid>
      <description>The linear nature of the business flows within our system allows training to be very light. A video demonstrating each flow would suffice. The flows for teachers are queue management, schedule management and reporting. For students, the system provides detailed guidance throughout their flow.
Additionally, the application features guidance throughout the system with tooltips, text fragments and a complete FAQ for use-case walkthroughs and answers to possible concerns.</description>
    </item>
    
  </channel>
</rss>